(function(e) {
    e.uphLauncher = e.uphLauncher || function(t) {
        var n = e(window)
          , a = e("body")
          , o = function(e) {
            return e.protocol = e.protocol || !1,
            e.eventNamespace = e.eventNamespace || "uphLauncher",
            e.failCheckTime = e.failCheckTime || 1e3,
            e.successFn = e.successFn || !1,
            e.failFn = e.failFn || !1,
            e.checkSupport = e.checkSupport || !1,
            e.notSupport = e.notSupport || !1,
            e.notSupportMessage = e.notSupportMessage || "지원하지 않는 브라우저입니다.",
            e.cantDetectMessage = e.cantDetectMessage || "설치 여부 확인이 불가능한 브라우저입니다.\n확인을 누르면 실행을 시도합니다.",
            e.cantDetectCancleFn = e.cantDetectCancleFn || !1,
            e.blockPopupMessage = e.blockPopupMessage || "차단된 팝업창을 허용해주세요.",
            e
        }(t || {})
          , r = function(t) {
            return t.hasMsLaunchUri = !!navigator && !!navigator.msLaunchUri,
            t.underIE9 = !!navigator && !!navigator.appName && "Microsoft Internet Explorer" === navigator.appName && function() {
                return null != new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})").exec(navigator.userAgent) ? parseFloat(RegExp.$1) : -1
            }() < 9,
            t.isOpera = !!navigator && (!!window.opera || navigator.userAgent.indexOf(" OPR/") >= 0),
            t.newWindowHack = t.underIE9,
            t.cantDetect = t.isOpera,
            t.notSupport = function() {
                var n = !1;
                return e.each(o.notSupport, function(e, a) {
                    t[a] && (n = !0)
                }),
                n
            }(),
            t
        }({});
        return function() {
            if (o.checkSupport)
                return !r.notSupport || (alert(o.notSupportMessage),
                !1);
            if (!o.protocol)
                return !1;
            if (r.notSupport)
                return alert(o.notSupportMessage),
                !1;
            var t = e("<iframe>").hide()
              , c = function() {
                a.append(t),
                t.attr("src", o.protocol)
            }
              , u = function() {
                n.off("blur." + o.eventNamespace),
                t.remove(),
                o.failFn && o.failFn()
            }
              , i = 0
              , p = function() {
                clearTimeout(i),
                t.remove(),
                o.successFn && o.successFn()
            };
            if (r.hasMsLaunchUri)
                return navigator.msLaunchUri(o.protocol, o.successFn, o.failFn),
                !1;
            if (r.newWindowHack) {
                var s = window.open("", "", "width=0,height=0");
                return s ? (s.document.write('<iframe src="' + o.protocol + '"></iframe>'),
                setTimeout(function() {
                    try {
                        s.location.href,
                        s.setTimeout("window.close()", 1e3),
                        p()
                    } catch (e) {
                        s.close(),
                        u()
                    }
                }, 1e3),
                !1) : (alert(o.blockPopupMessage),
                !1)
            }
            return r.cantDetect ? (confirm(o.cantDetectMessage) ? (c(),
            setTimeout(function() {
                p()
            }, 100)) : (o.failFn = o.cantDetectCancleFn,
            u()),
            !1) : (i = setTimeout(function() {
                u()
            }, o.failCheckTime),
            n.focus(),
            n.one("blur." + o.eventNamespace, p),
            c(),
            !1)
        }()
    }
}
)(jQuery),
function(e) {
    e.FF14Uph = e.FF14Uph || {
        schemeName: "",
        getStartGameScheme: function(e) {
            var e = e || {};
            return "" + [e.channel].join("X")
        },
        notSupport: function() {
            return ["newWindowHack", "cantDetect"]
        },
        goDownload: function() {
            location.href = "/download/?LauncherPop=1"
        },
        startGameFail: function() {
            confirm("최신 버전의 클라이언트를 설치해 주세요") && e.FF14Uph.goDownload()
        },
        notSupportMessage: "지원하지 않는 브라우저 버전입니다.\n최신 버전의 브라우저로 업데이트하거나 다른 브라우저를 이용해주시기 바랍니다.",
        startGameException: function() {
            alert("게임 실행에 알 수 없는 오류가 발생하였습니다.\n잠시 후 다시 이용해주시기 바라며, 해당 현상이 지속해서 발생할 경우 고객센터를 이용해주세요.")
        },
        startGame: function(t) {
            var n = t || {};
            return e.FF14Uph.schemeName = n.scheme,
            !!e.uphLauncher({
                checkSupport: !0,
                notSupport: e.FF14Uph.notSupport(),
                notSupportMessage: e.FF14Uph.notSupportMessage
            }) && void e.FF14Uph.startUphLaucher(e.FF14Uph.getStartGameScheme({
                channel: n.channel
            }))
        },
        startUphLaucher: function(t, n) {
            var a = !1;
            if (e.FF14Uph.schemeName && e.FF14Uph.schemeName.length > 0 && (a = e.FF14Uph.schemeName),
            !a)
                return e.FF14Uph.startGameException(),
                !1;
            var o = function() {
                try {
                    e.uphLauncher({
                        protocol: a + ":" + t,
                        notSupport: e.FF14Uph.notSupport(),
                        notSupportMessage: e.FF14Uph.notSupportMessage,
                        successFn: function() {
                            try {
                                SiteUtil && SiteUtil.sendGA && SiteUtil.sendGA("ga", "send", "event", {
                                    eventCategory: "GameStart",
                                    eventAction: a,
                                    eventLabel: "게임실행"
                                })
                            } catch (e) {}
                        },
                        failFn: e.FF14Uph.startGameFail
                    })
                } catch (t) {
                    e.FF14Uph.startGameException()
                }
            };
            n ? setTimeout(function() {
                o()
            }, n) : o()
        }
    }
}(jQuery),
function(e) {
    e.initGameStart = e.initGameStart || function() {
        var t = e("[game-start]");
        t.each(function() {
            var t = e(this)
              , n = t.attr("game-channel");
            switch (n) {
            case "NV":
                n = "NaverGame";
                break;
            case "NX":
                n = "Nexon";
                break;
            case "DA":
                n = "KakaoGames"
            }
            t.data("uph-game-start") || (t.data("uph-game-start", !0),
            t.on("click", function() {
                return e.FF14Uph.startGame({
                    scheme: t.attr("game-start"),
                    channel: n
                }),
                !1
            }))
        })
    }
    ,
    e(function() {
        e.initGameStart()
    })
}(jQuery);
